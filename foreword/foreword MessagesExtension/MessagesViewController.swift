//
//  MessagesViewController.swift
//  foreword MessagesExtension
//
//  Created by Julia Wang on 1/19/22.
// why is my git not working
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    @IBOutlet weak var ibo_myscore:UILabel!
    var summary = "Game On"
    var battleView:BattleViewController!
    
    var pitcher:Bool = false
    
    override func viewDidLoad() {
        
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        let score = UserDefaults.standard.integer(forKey: "wins_key")
        ibo_myscore.text = "My Wins: \(score)"
        
    }
    
    @IBAction func iba_choseWeapon(sender:UIButton){
        
        self.composeMessage(conversation: self.activeConversation!, type: sender.tag)
        
    }
    
    func composeMessage(conversation:MSConversation, type:Int){
        
        let messagelayout = MSMessageTemplateLayout()
        messagelayout.caption = "Placeholder"
        messagelayout.subcaption = "Foreword"
        messagelayout.trailingCaption = self.summary
        //messagelayout.image = UIImage(named: "FIND A PHOTO.jpg")

        
        var components = URLComponents()
        
        
        let item = URLQueryItem(name: "code", value: "\(type)")
        
        // put it into an array of query items
        var items = [URLQueryItem]()
        items.append(item)
        components.queryItems = items
        
        
        guard let conversation = activeConversation else {
            fatalError("Expected a Conversation")
        }
        
        let session = conversation.selectedMessage?.session ?? MSSession()
        
        let message = MSMessage(session: session)
            message.shouldExpire = true
            message.layout = messagelayout
            message.summaryText = "Game Over"
            message.url = components.url!
        
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dismisses the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
